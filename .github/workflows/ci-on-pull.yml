name: CI on pull

on:
  pull_request:
    branches:
      - devel
  workflow_dispatch:
    branches:
      - devel

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: 1
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    #- name: Prepare
    #  run:

    # Caching Docker images is not ready yet, see 
    # https://github.com/storeman-developers/harbour-storeman-installer/blob/devel/cache-docker-images_github-ci.md
    #- name: Cache Docker images of the Sailfish-SDK
    #  id: cache-sdk
    #  uses: actions/cache@v3
    #  with:
    #    path: $GITHUB_WORKSPACE/â€¦
    #    key: cache

    - name: ARM64 build for ${{ env.ARCH }} on ${{ env.RELEASE }}
      env:
        ARCH: aarch64 # amd64 would be faster 2m instead of 5m
        RELEASE: 4.5.0.16 # this is the last docker available version
      run: |
        set -x
        mkdir -p output/$RELEASE/$ARCH
        docker run --rm -v $PWD:/share coderus/sailfishos-platform-sdk:$RELEASE /bin/sh -xc '
           mkdir -p build
           cd build
           cp -r /share/. .
           mb2 -t SailfishOS-$1-$2 build -d
           sudo cp -r RPMS/. /share/output/$1/$2/' sh_mb2 $RELEASE $ARCH

    - name: Upload build results
      uses: actions/upload-artifact@v3
      with:
        name: RPM-build-results
        path: output/

# "Create release" does not fit here, because this workflow is triggered by Pull Requests,
# not newly set Git tags.
#    - name: Create release
#      if: contains(github.ref, 'release')
#      run: |
#        set -x
#        assets=""
#        for asset in output/*/*/*.rpm; do
#          assets="$assets -a $asset"
#        done
#        tag_name="${GITHUB_REF##*/}"
#        hub release create"$assets" -m "$tag_name" "$tag_name"
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
